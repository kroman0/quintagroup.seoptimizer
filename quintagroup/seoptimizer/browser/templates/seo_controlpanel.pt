<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      lang="en-US"
      metal:use-macro="here/prefs_main_template/macros/master"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      i18n:domain="quintagroup.seoptimizer">
  <body>
    <div metal:fill-slot="prefs_configlet_main"
        tal:define="errors python:request.get('errors', {})"><!--TODO:implement validation and errors handling-->
      <h1>Search Engine Optimizer configuration</h1>
        <a href="" class="link-parent"
           tal:attributes="href string: $portal_url/plone_control_panel"
           i18n:translate="label_up_to_plone_setup">
           Up to Plone Setup
        </a>
        <div class="documentDescription">
           You can select what content types are
           qSEOptimizer-enabled, and control if Dublin Core metatags
           are exposed in the header of content pages.
        </div>
        <form name="edit_form" action="." method="post" enctype="multipart/form-data"
              tal:attributes="action string:${context/absolute_url}/@@seo-controlpanel" >
          <div class="field">
            <input type="checkbox"
                   id="exposeDCMetaTags"
                   name="exposeDCMetaTags"
                   tal:attributes="checked view/getExposeDCMetaTags"/>
                        <label for="exposeDCMetaTags">Expose <abbr title="Dublin Core">DC</abbr> meta tags</label>
                        <div class="formHelp" i18n:translate="description_seo_dc_metatags">
                           Controls if <abbr title="Dublin Core">DC</abbr> metatags are exposed to page
                           header. They include DC.description, DC.type,
                           DC.format, DC.creator and others.
                        </div>
                    </div>

                    <div class="field">
                        <label for="default_custom_metatags" i18n:translate="label_default_custom_metatags">
                            Default custom metatags.
                        </label>
                        <div class="formHelp" i18n:translate="help_default_custom_metatags">
                            Fill in custom metatag names (one per line) which will appear on qseo_properties
                            edit tab. Example: "metaname|metacontent" or "metaname".
                        </div>
                        <div class="widget">
                            <textarea cols="60" id="default_custom_metatags" name="default_custom_metatags" rows="15"
                                      tal:content="python:'\n'.join(view.getDefaultCustomMetatags())"></textarea>
                        </div>
                    </div>

                    <div class="field">
                        <label for="metatags_order" i18n:translate="label_metatags_order">
                            Meta tags order in the page.
                        </label>
                        <div class="formHelp" i18n:translate="help_metatags_order">
                            Fill in meta tags order (one per line) which will appear on qseo_properties
                            edit tab. Example: "metaname accessor".
                        </div>
                        <div class="widget">
                            <textarea cols="60" id="metatags_order" name="metatags_order" rows="15"
                                      tal:content="python:'\n'.join(view.getMetaTagsOrder())"></textarea>
                        </div>
                    </div>

                    <div class="field">
                        <label for="additionalKeywords" i18n:translate="label_additional_keywords">
                            Additional keywords that should be added to the content types.
                        </label>
                        <div class="formHelp" i18n:translate="help_additional_keywords">
                            Use this field when you want that your content types receive
                            additional keywords from the ones you manually specify. Enter
                            one keyword per line.
                        </div>
                        <div class="widget">
                            <textarea cols="60" id="additionalKeywords" name="additionalKeywords" rows="15"
                                      tal:content="python:'\n'.join(view.getAdditionalKeywords())"></textarea>
                        </div>
                    </div>

                    <fieldset class="contentTypes"
                              tal:define="typeLists view/createMultiColumnList">
                        <legend i18n:translate="label_content_type_title">Content Types</legend>

                        <div class="formHelp" i18n:translate="description_seo_content_types">
                            Select content types that will have SEO properties
                            enabled.
                        </div>
                        <div style="float:left; margin-right: 2em;" tal:repeat="sublist typeLists">
                            <ul class="configlets">
                                <li tal:repeat="ptypeInfo sublist">
                                    <tal:type define="type python:view.typeInfo(ptypeInfo);
                                                      name type/getId;">

                                        <input  type="checkbox"
                                                name="contentTypes:list"
                                                tal:attributes="id name;
                                                                value name;
                                                                checked python:view.isEnableCT(name)"/>
                                        <label tal:attributes="for python:type.getId()"
                                               tal:content="type/Title"/>
                                    </tal:type>
                                </li>
                            </ul>
                        </div>
                    </fieldset>

                    <div class="formControls"
                         i18n:domain="plone">
                         <input class="context"
                             tabindex=""
                             type="submit"
                             name="form.button.Save"
                             value="Save"
                             i18n:attributes="value"
                             tal:attributes="tabindex tabindex/next;" />
                    </div>
                    <input type="hidden" name="form.submitted" value="1" />
                </form>
    </div>
 </body>
</html>
